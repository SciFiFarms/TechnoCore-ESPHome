version: "3.5"

networks:
  esphome:
    attachable: true

volumes:
  esphome:
  esphome-build:

services:
  ## Uncomment this if Traefik will be used for routing traffick to this service.
  ingress:
    networks:
      - esphome

  esphome:
    deploy:
      labels:
        - traefik.frontend.rule=$ESPHOME_ROUTING_LABEL
        - traefik.frontend.priority=$ESPHOME_ROUTING_LABEL_PRIORITY
        # This is also set as an ENV so that the wrapper can use socat to 
        # automatically forward traffic to the actual service.
        - traefik.port=6052
        - ${TRAEFIK_BASIC_AUTH}
        - traefik.enable=true
        - traefik.tags=ingress 
        - traefik.docker.network=${STACK_NAME:-technocore}_esphome
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https
        - com.ouroboros.enable=true
      mode: global
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
      # Big services will need this modified or removed.
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    environment:
      # mDNS requires extra network permissions. Instead, I can use ping.
      # https://github.com/esphome/issues/issues/641#issuecomment-534156628
      - ESPHOME_DASHBOARD_USE_PING=true
      - image_provider=${image_provider:-scififarms}
      - STACK_NAME=${STACK_NAME:-technocore}
      - service_name=esphome
        # This is also set in the Traefik labels.
      - SERVICE_PORT=6052
      - TAG=${TAG:-latest}
      # This is used to allow the wrapper to mount the /config folder to the correct place on the host.
      - host_working_dir=$PWD
      #- debug=${esphome_debug}
      - esphome_core=./esphome-core:/esphome-core
      - esphome_app=${DEV_MOUNT_ESPHOME_ESPHOME:-$EMPTY_MOUNT}
      - TECHNOCORE_ROOT=${TECHNOCORE_ROOT}
      - MQTT_USERNAME=esphome
      # TODO: Have the python read the secrets file rather than the env.
      - MQTT_PASSWORD={{"{{DOCKER-SECRET:mqtt_password}}"}}
      - MQTT_BROKER=mqtt.$DOMAIN
      - VAULT_TOKEN={{"{{DOCKER-SECRET:vault_token}}"}}
      - VOLUME=$ESPHOME_VOLUME
      - DEBUG=${DEBUG_ESPHOME}
      - DEBUG_PORT=6051
      # Sometimes you have to pass in ${DOMAIN} to enable the correct link paths to be generated.
      # Othertimes you can use http:// or https:// for the website. Weird trick.
    image: ${image_provider:-scififarms}/technocore-esphome-wrapper:${TAG:-latest}
    logging:
      driver: "${LOGGING_DRIVER}"
      options:
        tag: "{{.Name}}"
    networks:
      - esphome
    #secrets:

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $ESPHOME_VOLUME:/config
      - ${DEV_MOUNT_ESPHOME_ESPHOME:-$EMPTY_MOUNT}
      # TODO: These don't seem needed?
      #- ./esphome-core:/esphome-core
      - esphome-builds:/tmp/esphome-builds/
    user: "0" # I suspect I'll be able to remove this. I'd like to do that. 
